name: CI Linux (GCC · build & install SDK)

on:
  push:
    branches: [ main, stable ]
  pull_request:
    branches: [ main, stable ]

jobs:
  build-linux-gcc:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive   # инициализировать сабмодули
          fetch-depth: 0          # полная история суперпроекта (для тегов/версий)
          # lfs: true             # включи, если у тебя есть Git LFS-ассеты

      - name: Ensure submodules (init + fetch tags)
        run: |
          set -euo pipefail
          git submodule update --init --recursive
          # Подтянуть теги и при необходимости разшаловить каждый сабмодуль
          git submodule foreach --recursive '
            git fetch --prune --tags --force || true
            if git rev-parse --is-shallow-repository | grep -qi true; then
              git fetch --unshallow || git fetch --deepen=1000 || true
            fi
          '

      - name: Install build deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake ninja-build pkg-config git \
            libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev \
            libgl1-mesa-dev mesa-common-dev \
            libasound2-dev libflac-dev libvorbis-dev libogg-dev libsndfile1-dev libopenal-dev \
            libfreetype6-dev \
            libudev-dev libdrm-dev

      - name: Toolchain versions
        run: |
          gcc --version
          g++ --version
          cmake --version
          ninja --version
          pkg-config --version

      - name: Configure (Release, Ninja)
        env:
          CC:  gcc
          CXX: g++
        run: |
          set -e
          mkdir -p build
          cmake -S . -B build -G "Ninja" \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX="$PWD/dist/sdk" \
            -DBUILD_SHARED_LIBS=OFF \
            -DIMGUIX_DEPS_MODE=BUNDLED \
            -DIMGUIX_BUILD_SHARED=OFF \
            -DIMGUIX_BUILD_TESTS=OFF \
            -DIMGUIX_BUILD_EXAMPLES=OFF \
            -DIMGUIX_USE_SFML_BACKEND=ON \
            -DIMGUIX_IMGUI_FREETYPE=ON \
            -DIMGUIX_VENDOR_JSON=ON \
            -DIMGUIX_SFML_MAJOR=3 \
            -DIMGUIX_SDK_INSTALL=ON \
            -DIMGUIX_SDK_BUNDLE_DEPS=ON \
            -DIMGUIX_SDK_INSTALL_QUICKSTART=ON \
            -DIMGUIX_SDK_FLATTEN_MISC_HEADERS=ON \
            -DCMAKE_POLICY_DEFAULT_CMP0152=NEW \
            -Wno-dev \
          2>&1 | tee build/configure.log

      - name: Build
        run: |
          set -e
          cmake --build build --config Release --parallel \
          2>&1 | tee build/build.log

      - name: Install (SDK)
        run: |
          set -e
          cmake --build build --config Release --target install \
          2>&1 | tee build/install.log

      - name: Check SDK layout
        run: |
          test -d dist/sdk/include || (echo "include/ missing" && exit 1)
          test -d dist/sdk/lib     || (echo "lib/ missing" && exit 1)
          test -d dist/sdk/lib/cmake || echo "WARN: lib/cmake missing (package config not exported?)"

      - name: Upload artifacts (SDK + logs)
        uses: actions/upload-artifact@v4
        with:
          name: imguix-sdk-linux-gcc
          path: |
            dist/sdk
            build/*.log
          if-no-files-found: error

